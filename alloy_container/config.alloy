logging {
  level = "info"
}

prometheus.remote_write "mimir_host" {
  endpoint {
    url = "http://192.168.11.165:9009/api/v1/push"
    
    // Optional: Add authentication if needed
    // basic_auth {
    //   username = "USER"
    //   password = "PASS"
    // }
  }
}

prometheus.exporter.unix "localhost" {
  enable_collectors = [
    "boottime",
    "cpu",
    "cpufreq",
    "diskstats",
    "edac",
    "filesystem",
    "hwmon",
    "loadavg",
    "logind",
    "meminfo",
    "netclass",
    "netdev",
    "netstat",
    "network_route",
    "ntp",
    "os",
    "sockstat",
    "systemd",
    "thermal_zone",
    "time",
    "uname",
  ]
}


prometheus.exporter.windows "localhost" {
  enabled_collectors = [
    "cpu",
    "cs",
    "logical_disk",
    "net",
    "os",
    "service",
    "system",
    "textfile",
    "logon",
    "memory",
    "thermalzone",
    "textfile",
  ]
}

// Scrape both Windows metrics and our custom textfile metrics
prometheus.scrape "windows_metrics" {
  targets    = prometheus.exporter.windows.localhost.targets
  forward_to = [prometheus.remote_write.mimir_host.receiver]
}

//scrape if unix as well
prometheus.scrape "localhost" {
  targets    = prometheus.exporter.unix.localhost.targets
  forward_to = [prometheus.remote_write.mimir_host.receiver]
}

loki.write "remote_loki" {
  endpoint {
    url = "http://192.168.11.165:3100/loki/api/v1/push"
  }
}

 

loki.relabel "windows_mapping" {
  forward_to = [loki.write.remote_loki.receiver]
  rule {
    source_labels = ["computer"]
    target_label  = "agent_hostname"
  }
}

 

loki.process "parse_eventlog" {
  forward_to = [
    loki.relabel.windows_mapping.receiver,
  ]

  stage.json {
    expressions = {
      "source"  = "source",
    }
  }

  stage.labels {
    values = {
      "source"  = "source",
    }
  }
}

 

loki.source.windowsevent "system" {
  forward_to = [
    loki.process.parse_eventlog.receiver,
  ]
  eventlog_name = "System"
}

loki.source.windowsevent "application" {
  forward_to = [
    loki.process.parse_eventlog.receiver,
  ]
  eventlog_name = "Application"
}
